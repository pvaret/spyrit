# Copyright (c) 2007-2023 Pascal Varet <p.varet@gmail.com>
#
# This file is part of Spyrit.
#
# Spyrit is free software; you can redistribute it and/or modify it under the
# terms of the GNU General Public License version 2 as published by the Free
# Software Foundation.
#
# You should have received a copy of the GNU General Public License along with
# Spyrit; if not, write to the Free Software Foundation, Inc., 51 Franklin St,
# Fifth Floor, Boston, MA  02110-1301  USA
#

"""
Declaration of the Spyrit settings.
"""


from enum import IntEnum, StrEnum

from PySide6.QtGui import QFont
from sunset import Key, Bunch, Settings

from spyrit import constants
from spyrit.settings import key_shortcut
from spyrit.settings.serializers import Font


class Encoding(StrEnum):
    ASCII = "ASCII"
    LATIN1 = "Latin 1"
    UTF8 = "UTF-8"
    CP437 = "CP437"


class Solarized(StrEnum):
    Base03 = "#002b36"
    Base02 = "#073642"
    Base01 = "#586e75"
    Base00 = "#657b83"
    Base0 = "#839496"
    Base1 = "#93a1a1"
    Base2 = "#eee8d5"
    Base3 = "#fdf6e3"

    Yellow = "#b58900"
    Orange = "#cb4b16"
    Red = "#dc322f"
    Magenta = "#d33682"
    Violet = "#6c71c4"
    Blue = "#268bd2"
    Cyan = "#2aa198"
    Green = "#859900"

    # Dark colors generated by taking the standard Solarized colors and
    # darkening them 20%.

    DarkYellow = "#916e00"
    DarkOrange = "#a23c12"
    DarkRed = "#b02826"
    DarkMagenta = "#a92b68"
    DarkViolet = "#565a9d"
    DarkBlue = "#1e6fa8"
    DarkCyan = "#22817a"
    DarkGreen = "#6a7a00"


class AnsiColorCodes(IntEnum):
    Black = 0
    Red = 1
    Green = 2
    Yellow = 3
    Blue = 4
    Magenta = 5
    Cyan = 6
    LightGray = 7
    DarkGray = 8
    LightRed = 9
    LightGreen = 10
    LightYellow = 11
    LightBlue = 12
    LightMagenta = 13
    LightCyan = 14
    White = 15


SolarizedPalette = {
    AnsiColorCodes.Black: Solarized.Base03,
    AnsiColorCodes.Red: Solarized.DarkRed,
    AnsiColorCodes.Green: Solarized.DarkGreen,
    AnsiColorCodes.Yellow: Solarized.DarkYellow,
    AnsiColorCodes.Blue: Solarized.DarkBlue,
    AnsiColorCodes.Magenta: Solarized.DarkMagenta,
    AnsiColorCodes.Cyan: Solarized.DarkCyan,
    AnsiColorCodes.LightGray: Solarized.Base0,
    AnsiColorCodes.DarkGray: Solarized.Base01,
    AnsiColorCodes.LightRed: Solarized.Red,
    AnsiColorCodes.LightGreen: Solarized.Green,
    AnsiColorCodes.LightYellow: Solarized.Yellow,
    AnsiColorCodes.LightBlue: Solarized.Blue,
    AnsiColorCodes.LightMagenta: Solarized.Magenta,
    AnsiColorCodes.LightCyan: Solarized.Cyan,
    AnsiColorCodes.White: Solarized.Base1,
}


def _new_shortcut(combination: str) -> Key[key_shortcut.KeyShortcut]:
    return Key(default=key_shortcut.from_default(combination))


def _default_font() -> QFont:
    return QFont(
        constants.DEFAULT_FONT_FAMILY, constants.DEFAULT_FONT_POINT_SIZE
    )


class Color(Key[AnsiColorCodes]):
    def asHex(self) -> str:
        return SolarizedPalette[self.get()]


class SpyritSettings(Settings):
    class KeyShortcuts(Bunch):
        new_tab = _new_shortcut("Ctrl+T")
        new_window = _new_shortcut("Ctrl+Shift+N")
        close_current_tab = _new_shortcut("Ctrl+W")
        switch_to_previous_tab = _new_shortcut("Ctrl+PgUp")
        switch_to_next_tab = _new_shortcut("Ctrl+PgDown")
        move_current_tab_left = _new_shortcut("Ctrl+Shift+PgUp")
        move_current_tab_right = _new_shortcut("Ctrl+Shift+PgDown")
        toggle_second_input = _new_shortcut("Ctrl+M")

    class Network(Bunch):
        server = Key(default="")
        port = Key(default=0)
        encoding = Key(default=Encoding.ASCII)

    class UI(Bunch):
        class Output(Bunch):
            class Format(Bunch):
                text_color = Color(default=AnsiColorCodes.LightGray)
                background_color = Color(default=AnsiColorCodes.Black)
                italic = Key(default=False)
                bold = Key(default=False)
                underlined = Key(default=False)
                href = Key(default="")

            font = Key(default=_default_font(), serializer=Font())
            text_format = Format()
            status_text_format = Format(
                text_color=AnsiColorCodes.DarkGray, italic=True
            )
            background_color = Color(AnsiColorCodes.Black)

        style = Key(default="")
        output = Output()

    shortcuts = KeyShortcuts()
    net = Network()
    ui = UI()

    name = Key(default="")
